# Copy year into all corresponding rows.  Really wish I could figure out how to automate this!
tidyraffle$Year[2:13] <- tidyraffle[1,2]
tidyraffle$Year[15:25] <- tidyraffle[14,2]
tidyraffle$Year[27:40] <- tidyraffle[26,2]
tidyraffle$Year[42:54] <- tidyraffle[41,2]
tidyraffle$Year[56:69] <- tidyraffle[55,2]
tidyraffle$Year[71:85] <- tidyraffle[70,2]
tidyraffle$Year[87:97] <- tidyraffle[86,2]
tidyraffle$Year[99:105] <- tidyraffle[98,2]
# Remove original year separator rows
tidyraffle <- tidyraffle %>% filter(Year != "")
# Take a peek at the new data structure...
glimpse(tidyraffle)
tidyraffle %>%
group_by(quantity) %>%
summarise(val = n())
tidyraffle %>%
group_by(Cost) %>%
summarise(val = n()) %>%
arrange(Cost)
# fix the Cost in the first row to remove the text
tidyraffle[1,3] <- "80"
tidyraffle[1,]
# Remove all commas from Cost and convert to numeric
tidyraffle$Cost <- as.numeric(gsub(",","",tidyraffle$Cost))
# Convert quantity to numeric
tidyraffle$quantity <- as.integer(tidyraffle$quantity)
# Check results
glimpse(tidyraffle)
tidyraffle %>%
group_by(quantity) %>%
summarise(val = n())
tidyraffle %>%
group_by(Cost) %>%
summarise(val = n()) %>%
arrange(Cost)
tidyraffle %>%
mutate(UnitCost = Cost / quantity)
glimpse(tidyraffle)
knitr::opts_chunk$set(echo = TRUE)
library(RCurl)
x <- getURL("https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project2/DS2-Raffle%20Prizes.csv")
raffle <-data.frame(read.csv(text=x, header=FALSE, stringsAsFactors = FALSE))
library(tidyverse, quietly=TRUE)
dim(raffle)
glimpse(raffle)
head(raffle)
tail(raffle)
raffle %>%
group_by(V3) %>%
summarise(val = n())
raffle %>%
group_by(V5) %>%
summarise(val = n())
raffle %>%
group_by(V7) %>%
summarise(val = n())
raffle %>%
group_by(V8) %>%
summarise(val = n())
tidyraffle <- tail(raffle, 121) %>%
select(-c(3,5,7,8))
head(tidyraffle)
tail(tidyraffle)
colnames(tidyraffle) <- tidyraffle[1, ] # the first row will be the header
tidyraffle <- tidyraffle[-c(1,2), ] # removing the first 2 (header and blank) rows
rownames(tidyraffle) <- NULL
head(tidyraffle)
tidyraffle$Item
# Remove all rows with an empty string in the Item column
tidyraffle <- tidyraffle %>% filter(Item != "")
# Confirm that blank rows are gone...
head(tidyraffle, 20)
# Add a new Blank Column
tidyraffle$Year <- NA
# Copy year into all corresponding rows.  Really wish I could figure out how to automate this!
tidyraffle$Year[2:13] <- tidyraffle[1,2]
tidyraffle$Year[15:25] <- tidyraffle[14,2]
tidyraffle$Year[27:40] <- tidyraffle[26,2]
tidyraffle$Year[42:54] <- tidyraffle[41,2]
tidyraffle$Year[56:69] <- tidyraffle[55,2]
tidyraffle$Year[71:85] <- tidyraffle[70,2]
tidyraffle$Year[87:97] <- tidyraffle[86,2]
tidyraffle$Year[99:105] <- tidyraffle[98,2]
# Remove original year separator rows
tidyraffle <- tidyraffle %>% filter(Year != "")
# Take a peek at the new data structure...
glimpse(tidyraffle)
tidyraffle %>%
group_by(quantity) %>%
summarise(val = n())
tidyraffle %>%
group_by(Cost) %>%
summarise(val = n()) %>%
arrange(Cost)
# fix the Cost in the first row to remove the text
tidyraffle[1,3] <- "80"
tidyraffle[1,]
# Remove all commas from Cost and convert to numeric
tidyraffle$Cost <- as.numeric(gsub(",","",tidyraffle$Cost))
# Convert quantity to numeric
tidyraffle$quantity <- as.integer(tidyraffle$quantity)
# Check results
glimpse(tidyraffle)
tidyraffle %>%
group_by(quantity) %>%
summarise(val = n())
tidyraffle %>%
group_by(Cost) %>%
summarise(val = n()) %>%
arrange(Cost)
tidyraffle <- tidyraffle %>%
mutate(UnitCost = Cost / quantity)
glimpse(tidyraffle)
tidyraffle %>%
group_by(Year) %>%
summarise(mean(UnitCost, na.rm = TRUE))
yearly_avg_cost <- tidyraffle %>%
group_by(Year) %>%
summarise(mean(UnitCost, na.rm = TRUE))
yearly_avg_cost
ggplot(yearly_avg_cost) +
geom_line(mapping = aes(x=year))
ggplot(yearly_avg_cost) +
geom_line(mapping = aes(x=Year))
yearly_avg_cost <- tidyraffle %>%
group_by(Year) %>%
summarise(avg_cost = mean(Cost, na.rm = TRUE))
yearly_avg_cost
ggplot(yearly_avg_cost) +
geom_line(mapping = aes(x=Year, y=avg_cost))
ggplot(yearly_avg_cost) +
geom_bar(mapping = aes(x=Year, y=avg_cost))
ggplot(yearly_avg_cost) +
geom_line(mapping = aes(x=Year, y=avg_cost))
?ggplot2
ggplot(tidyraffle) +
geom_line(mapping = aes(x=Year, y=Cost))
ggplot(tidyraffle) +
geom_point(mapping = aes(x=Year, y=Cost))
ggplot(tidyraffle) +
geom_point(mapping = aes(x=Year, y=Cost))
ggplot(tidyraffle) +
geom_bar(mapping = aes(x=Year, y=Cost))
ggplot(tidyraffle) +
geom_bar(mapping = aes(x=Cost))
ggplot(tidyraffle) +
geom_point(mapping = aes(x=Year, y=Cost))
ggplot(tidyraffle) +
geom_point(mapping = aes(x=Year, y=Cost)) +
geom_smooth()
ggplot(tidyraffle, mapping = aes(x=Year, y=Cost)) +
geom_point() +
geom_smooth()
ggplot(tidyraffle) +
geom_point(mapping = aes(x=Year, y=Cost))
ggplot(tidyraffle) +
geom_point(mapping = aes(x=Cost, y=Year))
donors <- tidyraffle %>%
group_by(Status, Year) %>%
summarise(avg_cost = mean(Cost, na.rm = TRUE))
donors
library(DT)
donors <- tidyraffle %>%
group_by(Status, Year) %>%
summarise(avg_cost = mean(Cost, na.rm = TRUE))
datatable(donors)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(RCurl)
x <- getURL("https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project2/DS3-1-seven-major-felony-offenses-2000-2017.csv")
crime <-data.frame(read.csv(text=x, header=FALSE, stringsAsFactors = FALSE))
dim(crime)
head(crime, 5)
# make the third row the header row
colnames(crime) <- crime[3,]
# then remove the first 3 rows
crime <- crime[-c(1:3),]
# reset the row indexing
rownames(crime) <- NULL
head(crime, 5)
tail(crime[,1:10], 14)
# Put the Statistical notes in a separate dataframe
StatisticalNotes <- crime[-(1:627),1]
# Remove the Statistical Notes and blank rows from the bottom of the crime dataframe
crime <- crime[(1:624),]
knitr::opts_chunk$set(echo = TRUE)
library(RCurl)
x <- getURL("https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project2/DS3-1-seven-major-felony-offenses-2000-2017.csv")
crime <-data.frame(read.csv(text=x, header=FALSE, stringsAsFactors = FALSE))
dim(crime)
head(crime, 5)
# make the third row the header row
colnames(crime) <- crime[3,]
# then remove the first 3 rows
crime <- crime[-c(1:3),]
# reset the row indexing
rownames(crime) <- NULL
head(crime, 5)
tail(crime[,1:10], 14)
# Put the Statistical notes in a separate dataframe
StatisticalNotes <- crime[-(1:627),1]
# Remove the Statistical Notes and blank rows from the bottom of the crime dataframe
crime <- crime[(1:624),]
library(tidyverse)
for (x in 2:8){
crime[seq(x,624,8),1] <- crime[seq(1,624,8),1]
}
glimpse(crime)
sample_n(crime, 5)
tidycrime <- gather(crime, "Year", "n", 3:20)
sample_n(tidycrime, 10)
tidycrime[1:8,2]
knitr::opts_chunk$set(echo = TRUE)
library(RCurl)
x <- getURL("https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project2/DS3-1-seven-major-felony-offenses-2000-2017.csv")
crime <-data.frame(read.csv(text=x, header=FALSE, stringsAsFactors = FALSE))
dim(crime)
head(crime, 5)
# make the third row the header row
colnames(crime) <- crime[3,]
# then remove the first 3 rows
crime <- crime[-c(1:3),]
# reset the row indexing
rownames(crime) <- NULL
head(crime, 5)
tail(crime[,1:10], 14)
# Put the Statistical notes in a separate dataframe
StatisticalNotes <- crime[-(1:627),1]
# Remove the Statistical Notes and blank rows from the bottom of the crime dataframe
crime <- crime[(1:624),]
library(tidyverse)
for (x in 2:8){
crime[seq(x,624,8),1] <- crime[seq(1,624,8),1]
}
glimpse(crime)
sample_n(crime, 5)
tidycrime <- crime %>%
filter(CRIME != 'TOTAL SEVEN MAJOR FELONY OFFENSES')
gather("Year", "n", 3:20)
tidycrime <- crime %>%
filter(CRIME != 'TOTAL SEVEN MAJOR FELONY OFFENSES') %>%
gather("Year", "n", 3:20)
sample_n(tidycrime, 10)
StatisticalNotes
ggplot(tidycrime) +
geom_line(mapping = aes(x=Year, y=CRIME, color=PCT))
ggplot(tidycrime) +
geom_line(mapping = aes(x=Year, y=n, color=CRIME))
tidycrime %>%
group_by(CRIME, PCT) %>%
summarise(Totals = sum(n)) %>%
arrange(Totals)
tidycrime %>%
group_by(CRIME) %>%
summarise(Totals = sum(n)) %>%
arrange(Totals)
tidycrime %>%
group_by(CRIME) %>%
summarise(Totals = sum(n, na.rm=TRUE)) %>%
arrange(Totals)
tidycrime %>%
group_by(CRIME) %>%
summarise(Totals = sum(n, na.rm=TRUE)) %>%
arrange(desc(Totals))
tidycrime %>%
group_by(PCT) %>%
summarise(Totals = sum(n, na.rm=TRUE)) %>%
arrange(desc(Totals))
tidycrime %>%
filter(PCT %in% c('121', '122', '123'))
group_by(Year) %>%
summarise(Totals = sum(n, na.rm=TRUE)) %>%
arrange(desc(Totals))
tidycrime %>%
filter(PCT %in% c('121', '122', '123')) %>%
group_by(Year) %>%
summarise(Totals = sum(n, na.rm=TRUE)) %>%
arrange(desc(Totals))
tidycrime %>%
filter(PCT %in% c('121', '122', '123')) %>%
group_by(Year) %>%
summarise(Totals = sum(n, na.rm=TRUE)) %>%
arrange(desc(Year))
SItidycrime %>%
filter(PCT %in% c('121', '122', '123', '124')) %>%
group_by(Year) %>%
summarise(Totals = sum(n, na.rm=TRUE)) %>%
arrange(desc(Year))
SICrime <- tidycrime %>%
filter(PCT %in% c('121', '122', '123', '124')) %>%
group_by(Year) %>%
summarise(Totals = sum(n, na.rm=TRUE)) %>%
arrange(desc(Year))
SICrime
SICrime <- tidycrime %>%
filter(PCT %in% c('121', '122', '123', '124')) %>%
group_by(Year, CRIME) %>%
summarise(Totals = sum(n, na.rm=TRUE)) %>%
arrange(desc(Year))
SICrime
SICrime <- tidycrime %>%
filter(PCT %in% c('121', '122', '123', '124')) %>%
group_by(Year, CRIME) %>%
summarise(Totals = sum(n, na.rm=TRUE)) %>%
arrange(desc(Year))
SICrime
ggplot(SICrime) +
geom_line(mapping = aes(x=Year, y=n, color=CRIME))
ggplot(SICrime) +
geom_line(mapping = aes(x=Year, y=Totals, color=CRIME))
ggplot(SICrime) +
geom_line(aes(x=Year, y=Totals, color=CRIME))
ggplot(SICrime) +
geom_line(aes(x=Year, y=Totals, color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8)
ggplot(SICrime) +
geom_line(aes(x=Year, y=Totals, color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8))
ggplot(SICrime, aes(x=Year)) +
geom_line(aes(y=Totals, color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8))
ggplot(SICrime, aes(x=Year, y=Totals)) +
geom_line(aes(color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8))
ggplot(SICrime, aes(x=Year, y=Totals, color=CRIME)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8))
ggplot(SICrime, aes(x=Year, y=Totals, group=CRIME)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8))
ggplot(SICrime, aes(x=Year, y=Totals, group=CRIME)) +
geom_line(aes(color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8))
SICrime <- tidycrime %>%
filter(PCT %in% c('121', '122', '123', '124')) %>%
group_by(Year, CRIME) %>%
summarise(Totals = sum(n, na.rm=TRUE)) %>%
arrange(desc(Year))
SICrime
ggplot(SICrime, aes(x=Year, y=Totals, group=CRIME)) +
geom_line(aes(color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8))
NotSICrime <- tidycrime %>%
filter(PCT %in% c('121', '122', '123', '124')) %>%
group_by(Year, CRIME) %>%
summarise(Totals = sum(n, na.rm=TRUE)) %>%
arrange(desc(Year))
NotSICrime
ggplot(SICrime, aes(x=Year, y=Totals, group=CRIME)) +
geom_line(aes(color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8))
NotSICrime <- tidycrime %>%
filter(PCT not %in% c('121', '122', '123', '124')) %>%
NotSICrime <- tidycrime %>%
filter(!(PCT %in% c('121', '122', '123', '124'))) %>%
group_by(Year, CRIME) %>%
summarise(Totals = sum(n, na.rm=TRUE)) %>%
arrange(desc(Year))
NotSICrime
ggplot(SICrime, aes(x=Year, y=Totals, group=CRIME)) +
geom_line(aes(color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8))
ggplot(NotSICrime, aes(x=Year, y=Totals, group=CRIME)) +
geom_line(aes(color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8))
ggplot(NotSICrime, aes(x=Year, y=Totals, group=CRIME)) +
geom_line(aes(color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8)) +
scale_x_continuous(breaks=seq(2000,2017,1))
ggplot(NotSICrime, aes(x=Year, y=Totals, group=CRIME)) +
geom_line(aes(color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8)) +
scale_x_discrete(breaks=seq(2000,2017,1))
ggplot(NotSICrime, aes(x=Year, y=Totals, group=CRIME)) +
geom_line(aes(color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8)) +
scale_x_discrete(breaks=seq(2000,2017,2))
ggplot(NotSICrime, aes(x=Year, y=Totals, group=CRIME)) +
geom_line(aes(color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8)) +
scale_x_discrete(breaks=seq(2000,2017,.5))
ggplot(NotSICrime, aes(x=Year, y=Totals, group=CRIME)) +
geom_line(aes(color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8)) +
geom_smooth()
ggplot(NotSICrime, aes(x=Year, y=Totals, group=CRIME)) +
geom_line(aes(color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8)) +
geom_smooth(color=CRIME)
ggplot(NotSICrime, aes(x=Year, y=Totals, group=CRIME)) +
geom_line(aes(color=CRIME)) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8)) +
geom_smooth(aes(color=CRIME))
library(DATA606)
getLabs()
setwd("~/GitHub/DATA_606_Statistics_and_Probability")
startLab("Lab4a")
startLab("Lab4b")
load("more/ames.RData")
View(ames)
area <- ames$Gr.Liv.Area
price <- ames$SalePrice
summary(area)
hist(area)
summary(area)
hist(area, breaks = 10)
summary(area)
hist(area, breaks = 12)
summary(area)
hist(area, breaks = 15)
summary(area)
hist(area, breaks = 20)
summary(area)
hist(area, breaks = 18)
summary(area)
hist(area, breaks = 20)
summary(area)
hist(area)
samp1 <- sample(area, 50)
set.seed(250)
samp1 <- sample(area, 50)
mean(samp1)
set.seed(250)
samp1 <- sample(area, 50)
summary(samp1)
hist(samp1)
1126 - 1743
5642 - 334
set.seed(250)
samp1 <- sample(area, 50)
summary(samp1)
hist(samp1, breaks = 15)
set.seed(250)
samp1 <- sample(area, 50)
summary(samp1)
hist(samp1, breaks = 12)
set.seed(250)
samp1 <- sample(area, 50)
summary(samp1)
hist(samp1, breaks = 10)
set.seed(250)
samp1 <- sample(area, 50)
summary(samp1)
hist(samp1, breaks = 8)
set.seed(250)
samp1 <- sample(area, 50)
summary(samp1)
hist(samp1, breaks = 5)
set.seed(250)
samp1 <- sample(area, 50)
summary(samp1)
hist(samp1)
796 - 2872
-1119 - 1772
1119 - 1772
set.seed(150)
samp2 <- sample(area, 50)
mean(samp2)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
hist(sample_means50, breaks = 25)
sample_means50000 <- rep(NA, 50000)
for(i in 1:50000){
samp <- sample(area, 50)
sample_means50000[i] <- mean(samp)
}
hist(sample_means50000)
hist(sample_means50000, breaks = 25)
sample_means_small <- rep(0, 100)
for(i in 1:100){
samp <- sample(area, 50)
sample_means_small[i] <- mean(samp)
}
sample_means_small
samp_price <- sample(price, 50)
mean(samp_price)
samp_price <- sample(price, 50)
mean(samp_price)
samp_price <- sample(price, 50)
mean(samp_price)
samp_price <- sample(price, 50)
mean(samp_price)
set.seed(300)
samp_price <- sample(price, 50)
mean(samp_price)
set.seed(50)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(price, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(price, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
mean(price)
sample_means150 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(price, 150)
sample_means150[i] <- mean(samp)
}
hist(sample_means150)
mean(price)
